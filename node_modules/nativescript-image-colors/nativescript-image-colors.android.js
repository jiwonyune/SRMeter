"use strict";
var color_1 = require('color');
var ImageColors = (function () {
    function ImageColors() {
    }
    ImageColors.getColorPalette = function (image) {
        var drawable = image.android.getDrawable();
        var bmp = drawable.getBitmap();
        var returnPalette = {
            color1: new color_1.Color('black'),
            color2: new color_1.Color('black'),
            color3: new color_1.Color('black'),
            AndroidPalette: {},
            IosPalette: null
        };
        var Palette = new android.support.v7.graphics.Palette.from(bmp).generate();
        if (Palette != null) {
            var vibrantSwatch = Palette.getVibrantSwatch();
            var darkVibrantSwatch = Palette.getDarkVibrantSwatch();
            var lightVibrantSwatch = Palette.getLightVibrantSwatch();
            var mutedSwatch = Palette.getMutedSwatch();
            var darkMutedSwatch = Palette.getLightMutedSwatch();
            var lightMutedSwatch = Palette.getDarkMutedSwatch();
            returnPalette.AndroidPalette = {
                vibrant: this.getColor(vibrantSwatch.getRgb()),
                vibrantDark: this.getColor(darkVibrantSwatch.getRgb()),
                vibrantLight: this.getColor(lightVibrantSwatch.getRgb()),
                muted: this.getColor(mutedSwatch.getRgb()),
                mutedDark: this.getColor(darkMutedSwatch.getRgb()),
                mutedLight: this.getColor(lightMutedSwatch.getRgb()),
            };
            if (vibrantSwatch) {
                returnPalette.color1 = returnPalette.AndroidPalette.vibrant;
            }
            else {
                if (mutedSwatch)
                    returnPalette.color1 = returnPalette.AndroidPalette.muted;
            }
            if (darkVibrantSwatch) {
                returnPalette.color2 = returnPalette.AndroidPalette.vibrantDark;
            }
            else {
                if (darkMutedSwatch)
                    returnPalette.color2 = returnPalette.AndroidPalette.mutedDark;
            }
            if (lightVibrantSwatch) {
                returnPalette.color3 = returnPalette.AndroidPalette.vibrantLight;
            }
            else {
                if (lightMutedSwatch) {
                    returnPalette.color3 = returnPalette.AndroidPalette.mutedLight;
                }
            }
        }
        return returnPalette;
    };
    ImageColors.getColor = function (rgb) {
        if (rgb) {
            return new color_1.Color(rgb);
        }
        return null;
    };
    return ImageColors;
}());
exports.ImageColors = ImageColors;
